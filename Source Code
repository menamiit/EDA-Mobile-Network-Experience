import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

file_path = 'WPI-2004-05-March2017.xlsx'
data = pd.read_excel(file_path)

data = data.dropna()
data = data[data['Weight'] >= 1]

plt.hist(data['Weight'], bins=50, edgecolor='k')
plt.xlabel('Weight')
plt.ylabel('Count')
plt.title('Distribution of Commodity Weights')
plt.show()

all_commodities = data[data['COMMODITIES'] == 'ALL COMMODITIES']
time_series = all_commodities.iloc[:, 2:].mean(axis=0)
time_series.index = pd.to_datetime(time_series.index)
plt.plot(time_series.index, time_series.values)
plt.xlabel('Time')
plt.ylabel('Index Value')
plt.title('Trend of All Commodities Index Over Time')
plt.show()

correlation = data.corr()
print(correlation['Weight'])

top_commodities = data.nlargest(5, 'Weight')
print(top_commodities[['COMMODITIES', 'Weight']])

monthly_avg = time_series.groupby(time_series.index.month).mean()
plt.plot(monthly_avg.index, monthly_avg.values)
plt.xlabel('Month')
plt.ylabel('Average Index Value')
plt.title('Seasonal Patterns in All Commodities Index')
plt.show()

X = pd.to_numeric(time_series.index).values.reshape(-1, 1)
y = time_series.values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test, y_pred, color='red', label='Predicted')
plt.xlabel('Time')
plt.ylabel('Index Value')
plt.title('Linear Regression: Predicted vs Actual')
plt.legend()
plt.show()
